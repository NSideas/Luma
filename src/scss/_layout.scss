
@mixin contain {
  padding-left: 6%;
  padding-right: 6%;
  margin-left: auto;
  margin-right: auto;
  @media (min-width: $s) {
    padding-left: 2.5em;
    padding-right: 2.5em;
  }
  @media (min-width: $l) {
    max-width: 1140px;
  }
}

.contain {
  @include contain;
  max-width: 600px;
}

.contain--wide {
  @include contain;
}

.main-section {
  padding-top: 2.5em;
  padding-bottom: 2.5em;
  @media (min-width: $m) {
    padding-top: 3em;
    padding-bottom: 3em;
  }
  @media (min-width: $l) {
    padding-top: 4em;
    padding-bottom: 4em;
  }
}

.intro-section,
.main-section:first-child {
  padding-top: 1em;
  @media (min-width: $m) {
    padding-top: 2em;
  }
  @media (min-width: $l) {
    padding-top: 3.5em;
  }
}

.sub-section:not(:last-child) {
  padding-bottom: 1.5em;
  @media (min-width: $m) {
    padding-bottom: 2em;
  }
  @media (min-width: $l) {
    padding-bottom: 2.5em;
  }
}

.section-title + .sub-section {
  padding-top: 1em;
}

%dark_bg {
  color: white;
  a,
  .cta-link {
    color: inherit;
  }
}

.bg-color--brown {
  @extend %dark_bg;
  background-color: $brown;
}

.bg-color--beige {
  background-color: $beige;
}

img {
  max-width: 100%;
}

picture {
  display: block;
}

.full-width-img {
  img {
    min-width: 100%;
    object-fit: cover;
  }
}

.attachment-img {
  @media (min-width: $l) {
    margin-top: 1em;
    margin-bottom: 1em;
  }
}


// Grid

.grid-container {
  @include flex;
}

.v-align-center {
  align-items: center;
}

$column-count: 12;
$gutter: 42px;

%grid_item {
  width: 100%;
  margin-bottom: 1.75em;
  @media (min-width: $l) {
    margin-bottom: 0;
    margin-right: $gutter;
  }
}

%grid_item:last-child {
  margin-bottom: 0;
  @media (min-width: $l) {
    margin-right: 0;
  }
}

@mixin grid($col) {
  // Number of columns
  $n: $column-count / $col;
  // Total gutter space
  $g: ($column-count / $col - 1) * $gutter;
  width: calc( (100% - #{$g}) / #{$n} );
}

@for $i from 1 through $column-count {
  .grid-#{$i} {
    @extend %grid_item;
    @media (min-width: $l) {
      @include grid($i);
    }
  }
}


// Shadows

.top-shadow,
.bottom-shadow {
  position: relative;
  overflow: hidden;
}

.top-shadow:before,
.bottom-shadow:after {
  content: '';
  display: block;
  position: absolute;
  background: transparent;
  border-radius: 50%;
}

.top-shadow:before {
  @include top_shadow(120%, 12px);
  @media (min-width: $l) {
    @include top_shadow(100%, 16px);
  }
}

.bottom-shadow:after {
  @include bottom_shadow(120%, 12px);
  @media (min-width: $l) {
    @include bottom_shadow(100%, 16px);
  }
}



// Overlay modules

.overlay-module {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 100;
  width: 100%;
  height: 100%;
  background: rgba(black, .75);
  overflow-y: scroll;
  -webkit-overflow-scrolling: touch;
}

.overlay-module--outer-wrap {
  width: 100%;
  min-height: 100%;
  @include flex__center_x;
  align-items: flex-start;
  background: $gray-1;
  @media (min-width: $s) {
    background: transparent;
    align-items: center;
  }
}

.overlay-module--inner-wrap {
  background: $gray-1;
  padding: 3em 1.5em 1.5em;
  width: 100%;
  max-width: 600px;
  opacity: 0;
  transform: translateY(20px);
  transition: all .5s ease;
  @media (min-width: $s) {
    position: relative;
    width: 90%;
    margin: 5% 0;
    padding: 3em 2em;
    box-shadow: 0 3px 15px rgba(black, .5);
  }
  @media (min-width: 600px) {
    padding: 3em;
  }
  @media (min-width: $l) {
    max-width: 800px;
    padding: 3em;
  }
}

.overlay-module--inner-wrap.visible {
  opacity: 1;
  transform: translateY(0);
}

.overlay-module .close-button-container {
  position: fixed;
  top: 0;
  right: 0;
  width: 100%;
  @include flex;
  justify-content: flex-end;
  padding: 1em;
  @media (min-width: $s) {
    position: absolute;
  }
}
